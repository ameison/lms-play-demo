<?xml version="1.0" encoding="UTF-8" ?>
<Module>
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License
-->
	<ModulePrefs title="Hangout Starter">
		<Require feature="rpc" />
		<Require feature="views" />
		<Require feature="locked-domain" />
	</ModulePrefs>
	<Content type="html"><![CDATA[     

<html>
<style type="text/css">
<!--
.button {
  border-radius: 3px;
  -moz-border-radius: 3px;
  background: -webkit-gradient(linear, left top, left bottom, from(#fff), to(#ddd));
  background: -moz-linear-gradient(top, #fff, #ddd);  
  border: 1px solid #bbb;
}

.button:active {
	background: -webkit-gradient(linear, left top, left bottom, from(#aaa), to(#333)); 
	background: -moz-linear-gradient(bottom, #ddd, #aaa); }

-->
</style>
<body>

<script src="//plus.google.com/hangouts/_/api/v1/hangout.js"></script>

<h3>Simple Hangout App</h3>

<p>
<input class="button" type="button" value="Show participants!" id="showParticipants"
    onClick="showParticipants()"/>
</p>

<div id="participantsDiv"></div>

<hr>

<p></p>

<script>
currentUrl = (window.location != window.parent.location)? document.referrer: document.location;
var Url = {
    get get(){
        var vars= {};
        console.log(currentUrl.split('?')[1]);
        if(currentUrl.search.length!==0){
            if(currentUrl.search.length !==1){
                console.log('if');
                currentUrl.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value){
                    key=decodeURIComponent(key);
                    if(typeof vars[key]==="undefined") {vars[key]= decodeURIComponent(value);}
                    else {vars[key]= [].concat(vars[key], decodeURIComponent(value));}
                    });
            }else{
               console.log('else');
               var cursearch = currentUrl.split('?')[1];
               cursearch.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value){
               cursearch = cursearch.split('&');

               });
            }
        }
        return vars;
    }
};


function showParticipants() {
console.log(Url);
  var participants = gapi.hangout.getParticipants();

  var retVal = '<p>Participants: </p><ul>';

  for (var index in participants) {
    var participant = participants[index];

    if (!participant.person) {
      retVal += '<li>'+ Url.get.codigo+'</li>';
    }
    retVal += '<li>' + Url.get.codigo + '</li>';
  }

  retVal += '</ul>';

  var div = document.getElementById('participantsDiv');

  div.innerHTML = retVal;
}

function init() {
// When API is ready...
gapi.hangout.onApiReady.add(
      function(eventObj) {
        if (eventObj.isApiReady) {
            //alert(url);
          document.getElementById('showParticipants').style.visibility = 'visible';
        }
      });
}

//gapi.hangout.Participant.hasMicrophone = true;
//gapi.hangout.Participant.hasCamera = false;
//gapi.hangout.Participant.isBroadcaster = true;


// Wait for gadget to load.                                                       
gadgets.util.registerOnLoadHandler(init);
</script>
</body>
]]>
</Content>
</Module>

